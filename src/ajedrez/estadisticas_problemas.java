/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ajedrez;

import java.io.EOFException;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.text.DecimalFormat;
import java.util.HashSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author AlexGis
 */
public class estadisticas_problemas extends javax.swing.JFrame {
    
    private HashSet<Problema> lista;
    private HashSet<Usuario> lista_user;
    private Usuario usuario_menu= new Usuario("","");
    menu_principal encontrado= new menu_principal();
     private DecimalFormat f1=new DecimalFormat("#.00");
    
    /**
     * Creates new form estadisticas_problemas
     */
    public estadisticas_problemas() {
        initComponents();
    }
    public void setListaUsuario(String s, HashSet<Usuario> lista){
        try(ObjectInputStream ob=new ObjectInputStream(new FileInputStream(s))){
            while(true){
                Usuario aux=(Usuario) ob.readObject();
                lista.add(aux);
                /*System.out.println(aux.getnombre());
                System.out.println(aux.getpsw());*/
            }

        }
        catch(EOFException e){System.out.println(e.getMessage());}
        catch(IOException e3){System.out.println(e3.getMessage());} catch (ClassNotFoundException ex) {
            Logger.getLogger(interfaz_login.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public Usuario getUsuario(){
        for(Usuario u : lista_user){
            if(u.getnombre().equals(this.jLabel2.getText()))
                usuario_menu=u;
        }
        return usuario_menu;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("Impact", 0, 14)); // NOI18N
        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(750, 300));

        jButton1.setText("Problema 1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Problema 2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Problema 3");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Atr√°s");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Problema 4");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Problema 5");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Problema 6");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Problema 7");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("Problema 8");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("Problema 9");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setText("Problema 10");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Impact", 0, 14)); // NOI18N
        jLabel2.setText("jLabel2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(76, 76, 76)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton4)
                            .addComponent(jLabel2))))
                .addContainerGap(65, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton7)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton8))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jButton10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jButton11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //PROBLEMA 1
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        boolean c = false;
        Usuario user;
        String z;
        int i=1;
        int totalresueltos=0;
        double porcentaje = 0;
        lista=new HashSet<>();
        String s;
         try(ObjectInputStream ob=new ObjectInputStream(new FileInputStream("listaU_problemas.bin"))){
            while(true){
                Problema aux=(Problema) ob.readObject();
                if(aux.getId()==1){
                    user = aux.getUsuario();
                    z = user.getnombre();
                        if(estaresuelto(c, i,z)){
                            porcentaje=porcentaje+user.getporcentaje_exito();
                            totalresueltos=totalresueltos+1;
                            lista.add(aux);
                        }
                }
            }
        }
        catch(EOFException e){System.out.println(e.getMessage());}
        catch(IOException e3){System.out.println(e3.getMessage());} catch (ClassNotFoundException ex) {
            Logger.getLogger(interfaz_login.class.getName()).log(Level.SEVERE, null, ex);
        }
         Clasificacion_2 clasificacion2 = new Clasificacion_2();
         s=lista.toString();
         clasificacion2.setVisible(true);
         this.setEnabled(true);
         this.setVisible(false);
         clasificacion2.jLabel2.setText("1");
         clasificacion2.jLabel5.setText(this.jLabel2.getText());
         clasificacion2.jTextArea1.setText(s);
         clasificacion2.jLabel7.setText(Integer.toString(totalresueltos));
         if(totalresueltos==0){
             clasificacion2.jLabel8.setText("0"+ "%");
         }else{
            clasificacion2.jLabel8.setText(f1.format(porcentaje/totalresueltos)+ "%");
         }
    }//GEN-LAST:event_jButton1ActionPerformed
    //PROBLEMA 2
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        boolean c = false;
        Usuario user;
        String z;
        int i=2;
        int totalresueltos=0;
        double porcentaje = 0;
        lista=new HashSet<>();
        String s;
         try(ObjectInputStream ob=new ObjectInputStream(new FileInputStream("listaU_problemas.bin"))){
            while(true){
                Problema aux=(Problema) ob.readObject();
                if(aux.getId()==2){
                    user = aux.getUsuario();
                    z = user.getnombre();
                        if(estaresuelto(c, i,z)){
                            porcentaje=porcentaje+user.getporcentaje_exito();
                            totalresueltos=totalresueltos+1;
                            lista.add(aux);
                        }
                }
            }
        }
        catch(EOFException e){System.out.println(e.getMessage());}
        catch(IOException e3){System.out.println(e3.getMessage());} catch (ClassNotFoundException ex) {
            Logger.getLogger(interfaz_login.class.getName()).log(Level.SEVERE, null, ex);
        }
         Clasificacion_2 clasificacion2 = new Clasificacion_2();
         s=lista.toString();
         clasificacion2.setVisible(true);
         this.setEnabled(true);
         this.setVisible(false);
         clasificacion2.jLabel2.setText("2");
         clasificacion2.jLabel5.setText(this.jLabel2.getText());
         clasificacion2.jTextArea1.setText(s);
         clasificacion2.jLabel7.setText(Integer.toString(totalresueltos));
         if(totalresueltos==0){
             clasificacion2.jLabel8.setText("0"+ "%");
         }else{
            clasificacion2.jLabel8.setText(f1.format(porcentaje/totalresueltos)+ "%");
         }
    }//GEN-LAST:event_jButton2ActionPerformed
    //ATRAS
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        lista_user=new HashSet<Usuario>();
        menu_principal menu=new menu_principal();
        this.setEnabled(true);
        this.setVisible(false);
        menu.setVisible(true);
        setListaUsuario("users.bin", lista_user);
        this.getUsuario();
        menu.jLabel6.setText(this.jLabel2.getText());
        menu.jTextArea1.setText(usuario_menu.toString());
        
    }//GEN-LAST:event_jButton4ActionPerformed
//3
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        boolean c = false;
        Usuario user;
        String z;
        int i=3;
        int totalresueltos=0;
        double porcentaje = 0;
        lista=new HashSet<>();
        String s;
         try(ObjectInputStream ob=new ObjectInputStream(new FileInputStream("listaU_problemas.bin"))){
            while(true){
                Problema aux=(Problema) ob.readObject();
                if(aux.getId()==3){
                    user = aux.getUsuario();
                    z = user.getnombre();
                        if(estaresuelto(c, i,z)){
                            porcentaje=porcentaje+user.getporcentaje_exito();
                            totalresueltos=totalresueltos+1;
                            lista.add(aux);
                        }
                }
            }
        }
        catch(EOFException e){System.out.println(e.getMessage());}
        catch(IOException e3){System.out.println(e3.getMessage());} catch (ClassNotFoundException ex) {
            Logger.getLogger(interfaz_login.class.getName()).log(Level.SEVERE, null, ex);
        }
         Clasificacion_2 clasificacion2 = new Clasificacion_2();
         s=lista.toString();
         clasificacion2.setVisible(true);
         this.setEnabled(true);
         this.setVisible(false);
         clasificacion2.jLabel2.setText("3");
         clasificacion2.jLabel5.setText(this.jLabel2.getText());
         clasificacion2.jTextArea1.setText(s);
         clasificacion2.jLabel7.setText(Integer.toString(totalresueltos));
         if(totalresueltos==0){
             clasificacion2.jLabel8.setText("0"+ "%");
         }else{
            clasificacion2.jLabel8.setText(f1.format(porcentaje/totalresueltos)+ "%");
         }
    }//GEN-LAST:event_jButton3ActionPerformed
//4
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        boolean c = false;
        Usuario user;
        String z;
        int i=4;
        int totalresueltos=0;
        double porcentaje = 0;
        lista=new HashSet<>();
        String s;
         try(ObjectInputStream ob=new ObjectInputStream(new FileInputStream("listaU_problemas.bin"))){
            while(true){
                Problema aux=(Problema) ob.readObject();
                if(aux.getId()==4){
                    user = aux.getUsuario();
                    z = user.getnombre();
                        if(estaresuelto(c, i,z)){
                            porcentaje=porcentaje+user.getporcentaje_exito();
                            totalresueltos=totalresueltos+1;
                            lista.add(aux);
                        }
                }
            }
        }
        catch(EOFException e){System.out.println(e.getMessage());}
        catch(IOException e3){System.out.println(e3.getMessage());} catch (ClassNotFoundException ex) {
            Logger.getLogger(interfaz_login.class.getName()).log(Level.SEVERE, null, ex);
        }
         Clasificacion_2 clasificacion2 = new Clasificacion_2();
         s=lista.toString();
         clasificacion2.setVisible(true);
         this.setEnabled(true);
         this.setVisible(false);
         clasificacion2.jLabel2.setText("4");
         clasificacion2.jLabel5.setText(this.jLabel2.getText());
         clasificacion2.jTextArea1.setText(s);
         clasificacion2.jLabel7.setText(Integer.toString(totalresueltos));
         if(totalresueltos==0){
             clasificacion2.jLabel8.setText("0"+ "%");
         }else{
            clasificacion2.jLabel8.setText(f1.format(porcentaje/totalresueltos)+ "%");
         }
    }//GEN-LAST:event_jButton5ActionPerformed
//5
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        boolean c = false;
        Usuario user;
        String z;
        int i=5;
        int totalresueltos=0;
        double porcentaje = 0;
        lista=new HashSet<>();
        String s;
         try(ObjectInputStream ob=new ObjectInputStream(new FileInputStream("listaU_problemas.bin"))){
            while(true){
                Problema aux=(Problema) ob.readObject();
                if(aux.getId()==5){
                    user = aux.getUsuario();
                    z = user.getnombre();
                        if(estaresuelto(c, i,z)){
                            porcentaje=porcentaje+user.getporcentaje_exito();
                            totalresueltos=totalresueltos+1;
                            lista.add(aux);
                        }
                }
            }
        }
        catch(EOFException e){System.out.println(e.getMessage());}
        catch(IOException e3){System.out.println(e3.getMessage());} catch (ClassNotFoundException ex) {
            Logger.getLogger(interfaz_login.class.getName()).log(Level.SEVERE, null, ex);
        }
         Clasificacion_2 clasificacion2 = new Clasificacion_2();
         s=lista.toString();
         clasificacion2.setVisible(true);
         this.setEnabled(true);
         this.setVisible(false);
         clasificacion2.jLabel2.setText("5");
         clasificacion2.jLabel5.setText(this.jLabel2.getText());
         clasificacion2.jTextArea1.setText(s);
         clasificacion2.jLabel7.setText(Integer.toString(totalresueltos));
         if(totalresueltos==0){
             clasificacion2.jLabel8.setText("0"+ "%");
         }else{
            clasificacion2.jLabel8.setText(f1.format(porcentaje/totalresueltos)+ "%");
         }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        boolean c = false;
        Usuario user;
        String z;
        int i=6;
        int totalresueltos=0;
        double porcentaje = 0;
        lista=new HashSet<>();
        String s;
         try(ObjectInputStream ob=new ObjectInputStream(new FileInputStream("listaU_problemas.bin"))){
            while(true){
                Problema aux=(Problema) ob.readObject();
                if(aux.getId()==6){
                    user = aux.getUsuario();
                    z = user.getnombre();
                        if(estaresuelto(c, i,z)){
                            porcentaje=porcentaje+user.getporcentaje_exito();
                            totalresueltos=totalresueltos+1;
                            lista.add(aux);
                        }
                }
            }
        }
        catch(EOFException e){System.out.println(e.getMessage());}
        catch(IOException e3){System.out.println(e3.getMessage());} catch (ClassNotFoundException ex) {
            Logger.getLogger(interfaz_login.class.getName()).log(Level.SEVERE, null, ex);
        }
         Clasificacion_2 clasificacion2 = new Clasificacion_2();
         s=lista.toString();
         clasificacion2.setVisible(true);
         this.setEnabled(true);
         this.setVisible(false);
         clasificacion2.jLabel2.setText("6");
         clasificacion2.jLabel5.setText(this.jLabel2.getText());
         clasificacion2.jTextArea1.setText(s);
         clasificacion2.jLabel7.setText(Integer.toString(totalresueltos));
         if(totalresueltos==0){
             clasificacion2.jLabel8.setText("0"+ "%");
         }else{
            clasificacion2.jLabel8.setText(f1.format(porcentaje/totalresueltos)+ "%");
         }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        boolean c = false;
        Usuario user;
        String z;
        int i=7;
        int totalresueltos=0;
        double porcentaje = 0;
        lista=new HashSet<>();
        String s;
         try(ObjectInputStream ob=new ObjectInputStream(new FileInputStream("listaU_problemas.bin"))){
            while(true){
                Problema aux=(Problema) ob.readObject();
                if(aux.getId()==7){
                    user = aux.getUsuario();
                    z = user.getnombre();
                        if(estaresuelto(c, i,z)){
                            porcentaje=porcentaje+user.getporcentaje_exito();
                            totalresueltos=totalresueltos+1;
                            lista.add(aux);
                        }
                }
            }
        }
        catch(EOFException e){System.out.println(e.getMessage());}
        catch(IOException e3){System.out.println(e3.getMessage());} catch (ClassNotFoundException ex) {
            Logger.getLogger(interfaz_login.class.getName()).log(Level.SEVERE, null, ex);
        }
         Clasificacion_2 clasificacion2 = new Clasificacion_2();
         s=lista.toString();
         clasificacion2.setVisible(true);
         this.setEnabled(true);
         this.setVisible(false);
         clasificacion2.jLabel2.setText("7");
         clasificacion2.jLabel5.setText(this.jLabel2.getText());
         clasificacion2.jTextArea1.setText(s);
         clasificacion2.jLabel7.setText(Integer.toString(totalresueltos));
         if(totalresueltos==0){
             clasificacion2.jLabel8.setText("0"+ "%");
         }else{
            clasificacion2.jLabel8.setText(f1.format(porcentaje/totalresueltos)+ "%");
         }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        boolean c = false;
        Usuario user;
        String z;
        int i=8;
        int totalresueltos=0;
        double porcentaje = 0;
        lista=new HashSet<>();
        String s;
         try(ObjectInputStream ob=new ObjectInputStream(new FileInputStream("listaU_problemas.bin"))){
            while(true){
                Problema aux=(Problema) ob.readObject();
                if(aux.getId()==8){
                    user = aux.getUsuario();
                    z = user.getnombre();
                        if(estaresuelto(c, i,z)){
                            porcentaje=porcentaje+user.getporcentaje_exito();
                            totalresueltos=totalresueltos+1;
                            lista.add(aux);
                        }
                }
            }
        }
        catch(EOFException e){System.out.println(e.getMessage());}
        catch(IOException e3){System.out.println(e3.getMessage());} catch (ClassNotFoundException ex) {
            Logger.getLogger(interfaz_login.class.getName()).log(Level.SEVERE, null, ex);
        }
         Clasificacion_2 clasificacion2 = new Clasificacion_2();
         s=lista.toString();
         clasificacion2.setVisible(true);
         this.setEnabled(true);
         this.setVisible(false);
         clasificacion2.jLabel2.setText("8");
         clasificacion2.jLabel5.setText(this.jLabel2.getText());
         clasificacion2.jTextArea1.setText(s);
         clasificacion2.jLabel7.setText(Integer.toString(totalresueltos));
         if(totalresueltos==0){
             clasificacion2.jLabel8.setText("0"+ "%");
         }else{
            clasificacion2.jLabel8.setText(f1.format(porcentaje/totalresueltos)+ "%");
         }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        boolean c = false;
        Usuario user;
        String z;
        int i=9;
        int totalresueltos=0;
        double porcentaje = 0;
        lista=new HashSet<>();
        String s;
         try(ObjectInputStream ob=new ObjectInputStream(new FileInputStream("listaU_problemas.bin"))){
            while(true){
                Problema aux=(Problema) ob.readObject();
                if(aux.getId()==9){
                    user = aux.getUsuario();
                    z = user.getnombre();
                        if(estaresuelto(c, i,z)){
                            porcentaje=porcentaje+user.getporcentaje_exito();
                            totalresueltos=totalresueltos+1;
                            lista.add(aux);
                        }
                }
            }
        }
        catch(EOFException e){System.out.println(e.getMessage());}
        catch(IOException e3){System.out.println(e3.getMessage());} catch (ClassNotFoundException ex) {
            Logger.getLogger(interfaz_login.class.getName()).log(Level.SEVERE, null, ex);
        }
         Clasificacion_2 clasificacion2 = new Clasificacion_2();
         s=lista.toString();
         clasificacion2.setVisible(true);
         this.setEnabled(true);
         this.setVisible(false);
         clasificacion2.jLabel2.setText("9");
         clasificacion2.jLabel5.setText(this.jLabel2.getText());
         clasificacion2.jTextArea1.setText(s);
         clasificacion2.jLabel7.setText(Integer.toString(totalresueltos));
         if(totalresueltos==0){
             clasificacion2.jLabel8.setText("0"+ "%");
         }else{
            clasificacion2.jLabel8.setText(f1.format(porcentaje/totalresueltos)+ "%");
         }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        boolean c = false;
        Usuario user;
        String z;
        int i=10;
        int totalresueltos=0;
        double porcentaje = 0;
        lista=new HashSet<>();
        String s;
         try(ObjectInputStream ob=new ObjectInputStream(new FileInputStream("listaU_problemas.bin"))){
            while(true){
                Problema aux=(Problema) ob.readObject();
                if(aux.getId()==10){
                    user = aux.getUsuario();
                    z = user.getnombre();
                        if(estaresuelto(c, i,z)){
                            porcentaje=porcentaje+user.getporcentaje_exito();
                            totalresueltos=totalresueltos+1;
                            lista.add(aux);
                        }
                }
            }
        }
        catch(EOFException e){System.out.println(e.getMessage());}
        catch(IOException e3){System.out.println(e3.getMessage());} catch (ClassNotFoundException ex) {
            Logger.getLogger(interfaz_login.class.getName()).log(Level.SEVERE, null, ex);
        }
         Clasificacion_2 clasificacion2 = new Clasificacion_2();
         s=lista.toString();
         clasificacion2.setVisible(true);
         this.setEnabled(true);
         this.setVisible(false);
         clasificacion2.jLabel2.setText("10");
         clasificacion2.jLabel5.setText(this.jLabel2.getText());
         clasificacion2.jTextArea1.setText(s);
         clasificacion2.jLabel7.setText(Integer.toString(totalresueltos));
         if(totalresueltos==0){
             clasificacion2.jLabel8.setText("0"+ "%");
         }else{
            clasificacion2.jLabel8.setText(f1.format(porcentaje/totalresueltos)+ "%");
         }
    }//GEN-LAST:event_jButton11ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(estadisticas_problemas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(estadisticas_problemas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(estadisticas_problemas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(estadisticas_problemas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new estadisticas_problemas().setVisible(true);
            }
        });
    }
    
    
public boolean estaresuelto(boolean c,int al,String y){

    login log = new login();
    int intentados;
    
         try(ObjectInputStream ob=new ObjectInputStream(new FileInputStream("listaU_problemas.bin"))){
            while(true){
                Problema aux=(Problema) ob.readObject();
                String user = y;
                Usuario use = aux.getUsuario();
               
                if(aux.getId()==al && use.getnombre().equals(user)){
                    intentados = use.getproblemas_resueltos();
                    if(intentados==0){
                        c=false;
                        
                    }else{
                        c=true;
                    }
                }
            }

        }
        catch(EOFException e){System.out.println(e.getMessage());}
        catch(IOException e3){System.out.println(e3.getMessage());} catch (ClassNotFoundException ex) {
            Logger.getLogger(interfaz_login.class.getName()).log(Level.SEVERE, null, ex);
        }
    
     return  c;
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    public static javax.swing.JLabel jLabel1;
    public javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}

